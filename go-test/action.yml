name: 'Testing Go App'
inputs:
  access-token:
    description: 'Gthub Token to access private repositories'
    required: true
  codacy-token:
    description: 'Codacy token to upload coverage'
    required: true
  codacy-organization-provider:
    description: 'Codacy organization provider to upload coverage'
    required: true
  codacy-username:
    description: 'Codacy username to upload coverage'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout ${{ github.event.repository.name }} repo
      uses: actions/checkout@v3
      with:
        path: ${{ github.event.repository.name }}
    - name: Checkout backend-services repo
      uses: actions/checkout@v3
      with:
        repository: getalternative/backend-services
        token: ${{ inputs.access-token }}
        persist-credentials: false
        fetch-depth: 0
        path: backend-services
    - run: tar zxvf cockroach.linux-amd64.tgz
      shell: bash
      working-directory: ./backend-services
    
    - uses: actions/setup-go@v3
      with:
        go-version: "1.19"
    - run: git config --global url."https://fernandobandeira:${{ inputs.access-token }}@github.com".insteadOf "https://github.com"
      shell: bash
    - run: go env -w GOPRIVATE=github.com/getalternative
      shell: bash
    - run: go mod download
      shell: bash
      working-directory: ./${{ github.event.repository.name }}
    - name: Run Tests
      run: COCKROACH_BINARY="../backend-services/cockroach.linux-amd64/cockroach" make test-ci
      shell: bash
      working-directory: ./${{ github.event.repository.name }}
    - name: Upload coverage
      run: |
        export CODACY_API_TOKEN=${{ inputs.codacy-token }}
        export CODACY_ORGANIZATION_PROVIDER=${{ inputs.codacy-organization-provider }}
        export CODACY_USERNAME=${{ inputs.codacy-username }}
        export CODACY_PROJECT_NAME=${{ github.event.repository.name }}
        bash <(curl -Ls https://coverage.codacy.com/get.sh) report --force-coverage-parser go -r coverage.txt
      shell: bash
      working-directory: ./${{ github.event.repository.name }}